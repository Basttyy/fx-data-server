{
  "service": {
    "service": "app",
    "serviceObject": {
      "name": "app"
    },
    "provider": {
      "name": "aws",
      "region": "us-east-1",
      "apiGateway": {
        "binaryMediaTypes": [
          "image/jpeg"
        ]
      },
      "environment": {
        "BREF_BINARY_RESPONSES": "1"
      },
      "stage": "dev",
      "versionFunctions": true,
      "deploymentMethod": "direct",
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          },
          "ApiLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/app-dev-api"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "app",
                        "dev",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream",
                          "logs:CreateLogGroup",
                          "logs:TagResource"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-dev*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/app-dev*:*:*"
                          }
                        ]
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "app",
                    "dev",
                    {
                      "Ref": "AWS::Region"
                    },
                    "lambdaRole"
                  ]
                ]
              },
              "ManagedPolicyArns": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
                    ]
                  ]
                }
              ]
            }
          },
          "ApiLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/app/dev/1688931743891-2023-07-09T19:42:23.891Z/app.zip"
              },
              "Handler": "public/server.php",
              "Runtime": "provided.al2",
              "FunctionName": "app-dev-api",
              "MemorySize": 1024,
              "Timeout": 28,
              "Environment": {
                "Variables": {
                  "BREF_BINARY_RESPONSES": "1"
                }
              },
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "VpcConfig": {
                "SecurityGroupIds": [
                  "sg-09f0fed8dfe2d4c61"
                ],
                "SubnetIds": [
                  "subnet-0be2353518acfca5b",
                  "subnet-029e1558b28a20934",
                  "subnet-0b45857b40bec8fd7",
                  "subnet-0387e0576bba123bc",
                  "subnet-0f43f48f3d97fed7d",
                  "subnet-0dd5c7abe9d611a3c"
                ]
              },
              "Layers": [
                "arn:aws:lambda:us-east-1:534081306603:layer:php-81-fpm:54",
                "arn:aws:lambda:us-east-1:403367587399:layer:gd-php-81:11"
              ]
            },
            "DependsOn": [
              "ApiLogGroup"
            ]
          },
          "ApiLambdaVersioni4V7a6MiBnQkis3PG4UyR7Z2nYvky0rNmb1EPOITrJI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "ApiLambdaFunction"
              },
              "CodeSha256": "Q3NIu4miWYaKXQUc827+ZPz5xymCv6mKkFxbA922rfQ="
            }
          },
          "HttpApi": {
            "Type": "AWS::ApiGatewayV2::Api",
            "Properties": {
              "Name": "dev-app",
              "ProtocolType": "HTTP"
            }
          },
          "HttpApiStage": {
            "Type": "AWS::ApiGatewayV2::Stage",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "StageName": "$default",
              "AutoDeploy": true,
              "DefaultRouteSettings": {
                "DetailedMetricsEnabled": false
              }
            }
          },
          "ApiLambdaPermissionHttpApi": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "ApiLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "HttpApi"
                    },
                    "/*"
                  ]
                ]
              }
            }
          },
          "HttpApiIntegrationApi": {
            "Type": "AWS::ApiGatewayV2::Integration",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "IntegrationType": "AWS_PROXY",
              "IntegrationUri": {
                "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaPermissionHttpApi\"][\"Properties\"][\"FunctionName\"]"
              },
              "PayloadFormatVersion": "2.0",
              "TimeoutInMillis": 30000
            }
          },
          "HttpApiRouteDefault": {
            "Type": "AWS::ApiGatewayV2::Route",
            "Properties": {
              "ApiId": {
                "Ref": "HttpApi"
              },
              "RouteKey": "$default",
              "Target": {
                "Fn::Join": [
                  "/",
                  [
                    "integrations",
                    {
                      "Ref": "HttpApiIntegrationApi"
                    }
                  ]
                ]
              }
            },
            "DependsOn": "HttpApiIntegrationApi"
          },
          "landingBucket2B5C7526": {
            "Type": "AWS::S3::Bucket",
            "UpdateReplacePolicy": "Delete",
            "DeletionPolicy": "Delete"
          },
          "landingBucketPolicy0F0F1F6B": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "landingBucket2B5C7526"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:GetObject",
                    "Effect": "Allow",
                    "Principal": {
                      "CanonicalUser": {
                        "Fn::GetAtt": [
                          "landingCDNOrigin1S3Origin18717D49",
                          "S3CanonicalUserId"
                        ]
                      }
                    },
                    "Resource": {
                      "Fn::Join": [
                        "",
                        [
                          {
                            "Fn::GetAtt": [
                              "landingBucket2B5C7526",
                              "Arn"
                            ]
                          },
                          "/*"
                        ]
                      ]
                    }
                  }
                ],
                "Version": "2012-10-17"
              }
            }
          },
          "landingResponseFunctionA308C722": {
            "Type": "AWS::CloudFront::Function",
            "Properties": {
              "FunctionCode": "function handler(event) {\n    var response = event.response;\n    response.headers = Object.assign({}, {\n    \"x-frame-options\": {\n        \"value\": \"SAMEORIGIN\"\n    },\n    \"x-content-type-options\": {\n        \"value\": \"nosniff\"\n    },\n    \"x-xss-protection\": {\n        \"value\": \"1; mode=block\"\n    },\n    \"strict-transport-security\": {\n        \"value\": \"max-age=63072000\"\n    }\n}, response.headers);\n    return response;\n}",
              "FunctionConfig": {
                "Comment": "app-dev-us-east-1-landing-response",
                "Runtime": "cloudfront-js-1.0"
              },
              "Name": "app-dev-us-east-1-landing-response",
              "AutoPublish": true
            }
          },
          "landingCDNOrigin1S3Origin18717D49": {
            "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
            "Properties": {
              "CloudFrontOriginAccessIdentityConfig": {
                "Comment": "Identity for landingCDNOrigin1FCED8263"
              }
            }
          },
          "landingCDN3A699906": {
            "Type": "AWS::CloudFront::Distribution",
            "Properties": {
              "DistributionConfig": {
                "Comment": "app-dev landing website CDN",
                "CustomErrorResponses": [
                  {
                    "ErrorCachingMinTTL": 0,
                    "ErrorCode": 404,
                    "ResponseCode": 200,
                    "ResponsePagePath": "/index.html"
                  }
                ],
                "DefaultCacheBehavior": {
                  "AllowedMethods": [
                    "GET",
                    "HEAD",
                    "OPTIONS"
                  ],
                  "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                  "Compress": true,
                  "FunctionAssociations": [
                    {
                      "EventType": "viewer-response",
                      "FunctionARN": {
                        "Fn::GetAtt": [
                          "landingResponseFunctionA308C722",
                          "FunctionARN"
                        ]
                      }
                    },
                    {
                      "EventType": "viewer-request",
                      "FunctionARN": {
                        "Fn::GetAtt": [
                          "landingRequestFunctionD581DA00",
                          "FunctionARN"
                        ]
                      }
                    }
                  ],
                  "TargetOriginId": "landingCDNOrigin1FCED8263",
                  "ViewerProtocolPolicy": "redirect-to-https"
                },
                "DefaultRootObject": "index.html",
                "Enabled": true,
                "HttpVersion": "http2",
                "IPV6Enabled": true,
                "Origins": [
                  {
                    "DomainName": {
                      "Fn::GetAtt": [
                        "landingBucket2B5C7526",
                        "RegionalDomainName"
                      ]
                    },
                    "Id": "landingCDNOrigin1FCED8263",
                    "S3OriginConfig": {
                      "OriginAccessIdentity": {
                        "Fn::Join": [
                          "",
                          [
                            "origin-access-identity/cloudfront/",
                            {
                              "Ref": "landingCDNOrigin1S3Origin18717D49"
                            }
                          ]
                        ]
                      }
                    }
                  }
                ]
              }
            }
          },
          "landingRequestFunctionD581DA00": {
            "Type": "AWS::CloudFront::Function",
            "Properties": {
              "FunctionCode": "var REDIRECT_REGEX = /^[^.]+$|\\.(?!(css|gif|ico|jpg|jpeg|js|png|txt|svg|woff|woff2|ttf|map|json|webp|xml|pdf|webmanifest|avif|wasm)$)([^.]+$)/;\n\nfunction handler(event) {\n    var uri = event.request.uri;\n    var request = event.request;\n    var isUriToRedirect = REDIRECT_REGEX.test(uri);\n\n    if (isUriToRedirect) {\n        request.uri = \"/index.html\";\n    }\n\n    return event.request;\n}",
              "FunctionConfig": {
                "Comment": "app-dev-us-east-1-landing-request",
                "Runtime": "cloudfront-js-1.0"
              },
              "Name": "app-dev-us-east-1-landing-request",
              "AutoPublish": true
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            },
            "Export": {
              "Name": "sls-app-dev-ServerlessDeploymentBucketName"
            }
          },
          "ApiLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "ApiLambdaVersioni4V7a6MiBnQkis3PG4UyR7Z2nYvky0rNmb1EPOITrJI"
            },
            "Export": {
              "Name": "sls-app-dev-ApiLambdaFunctionQualifiedArn"
            }
          },
          "HttpApiId": {
            "Description": "Id of the HTTP API",
            "Value": {
              "Ref": "HttpApi"
            },
            "Export": {
              "Name": "sls-app-dev-HttpApiId"
            }
          },
          "HttpApiUrl": {
            "Description": "URL of the HTTP API",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "HttpApi"
                  },
                  ".execute-api.",
                  {
                    "Ref": "AWS::Region"
                  },
                  ".",
                  {
                    "Ref": "AWS::URLSuffix"
                  }
                ]
              ]
            },
            "Export": {
              "Name": "sls-app-dev-HttpApiUrl"
            }
          },
          "landingBucketName4FF24876": {
            "Description": "Name of the bucket that stores the static website.",
            "Value": {
              "Ref": "landingBucket2B5C7526"
            }
          },
          "landingDomain37625960": {
            "Description": "Website domain name.",
            "Value": {
              "Fn::GetAtt": [
                "landingCDN3A699906",
                "DomainName"
              ]
            }
          },
          "landingCloudFrontCName00BB4C9F": {
            "Description": "CloudFront CNAME.",
            "Value": {
              "Fn::GetAtt": [
                "landingCDN3A699906",
                "DomainName"
              ]
            }
          },
          "landingDistributionId9079C8BD": {
            "Description": "ID of the CloudFront distribution.",
            "Value": {
              "Ref": "landingCDN3A699906"
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket",
            "Properties": {
              "BucketEncryption": {
                "ServerSideEncryptionConfiguration": [
                  {
                    "ServerSideEncryptionByDefault": {
                      "SSEAlgorithm": "AES256"
                    }
                  }
                ]
              }
            }
          },
          "ServerlessDeploymentBucketPolicy": {
            "Type": "AWS::S3::BucketPolicy",
            "Properties": {
              "Bucket": {
                "Ref": "ServerlessDeploymentBucket"
              },
              "PolicyDocument": {
                "Statement": [
                  {
                    "Action": "s3:*",
                    "Effect": "Deny",
                    "Principal": "*",
                    "Resource": [
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            },
                            "/*"
                          ]
                        ]
                      },
                      {
                        "Fn::Join": [
                          "",
                          [
                            "arn:",
                            {
                              "Ref": "AWS::Partition"
                            },
                            ":s3:::",
                            {
                              "Ref": "ServerlessDeploymentBucket"
                            }
                          ]
                        ]
                      }
                    ],
                    "Condition": {
                      "Bool": {
                        "aws:SecureTransport": false
                      }
                    }
                  }
                ]
              }
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "./vendor/bref/bref",
      "./vendor/bref/extra-php-extensions",
      "serverless-lift"
    ],
    "pluginsData": {},
    "functions": {
      "api": {
        "handler": "public/server.php",
        "description": "",
        "runtime": "provided.al2",
        "layers": {
          "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaFunction\"][\"Properties\"][\"Layers\"]"
        },
        "timeout": 28,
        "events": [
          {
            "httpApi": "*",
            "resolvedMethod": "ANY"
          }
        ],
        "vpc": {
          "securityGroupIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SecurityGroupIds\"]"
          },
          "subnetIds": {
            "$ref": "$[\"service\"][\"provider\"][\"compiledCloudFormationTemplate\"][\"Resources\"][\"ApiLambdaFunction\"][\"Properties\"][\"VpcConfig\"][\"SubnetIds\"]"
          }
        },
        "name": "app-dev-api",
        "package": {},
        "memory": 1024,
        "versionLogicalId": "ApiLambdaVersioni4V7a6MiBnQkis3PG4UyR7Z2nYvky0rNmb1EPOITrJI"
      }
    },
    "resources": {
      "Resources": {
        "landingBucket2B5C7526": {
          "Type": "AWS::S3::Bucket",
          "UpdateReplacePolicy": "Delete",
          "DeletionPolicy": "Delete"
        },
        "landingBucketPolicy0F0F1F6B": {
          "Type": "AWS::S3::BucketPolicy",
          "Properties": {
            "Bucket": {
              "Ref": "landingBucket2B5C7526"
            },
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": "s3:GetObject",
                  "Effect": "Allow",
                  "Principal": {
                    "CanonicalUser": {
                      "Fn::GetAtt": [
                        "landingCDNOrigin1S3Origin18717D49",
                        "S3CanonicalUserId"
                      ]
                    }
                  },
                  "Resource": {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Fn::GetAtt": [
                            "landingBucket2B5C7526",
                            "Arn"
                          ]
                        },
                        "/*"
                      ]
                    ]
                  }
                }
              ],
              "Version": "2012-10-17"
            }
          }
        },
        "landingResponseFunctionA308C722": {
          "Type": "AWS::CloudFront::Function",
          "Properties": {
            "FunctionCode": "function handler(event) {\n    var response = event.response;\n    response.headers = Object.assign({}, {\n    \"x-frame-options\": {\n        \"value\": \"SAMEORIGIN\"\n    },\n    \"x-content-type-options\": {\n        \"value\": \"nosniff\"\n    },\n    \"x-xss-protection\": {\n        \"value\": \"1; mode=block\"\n    },\n    \"strict-transport-security\": {\n        \"value\": \"max-age=63072000\"\n    }\n}, response.headers);\n    return response;\n}",
            "FunctionConfig": {
              "Comment": "app-dev-us-east-1-landing-response",
              "Runtime": "cloudfront-js-1.0"
            },
            "Name": "app-dev-us-east-1-landing-response",
            "AutoPublish": true
          }
        },
        "landingCDNOrigin1S3Origin18717D49": {
          "Type": "AWS::CloudFront::CloudFrontOriginAccessIdentity",
          "Properties": {
            "CloudFrontOriginAccessIdentityConfig": {
              "Comment": "Identity for landingCDNOrigin1FCED8263"
            }
          }
        },
        "landingCDN3A699906": {
          "Type": "AWS::CloudFront::Distribution",
          "Properties": {
            "DistributionConfig": {
              "Comment": "app-dev landing website CDN",
              "CustomErrorResponses": [
                {
                  "ErrorCachingMinTTL": 0,
                  "ErrorCode": 404,
                  "ResponseCode": 200,
                  "ResponsePagePath": "/index.html"
                }
              ],
              "DefaultCacheBehavior": {
                "AllowedMethods": [
                  "GET",
                  "HEAD",
                  "OPTIONS"
                ],
                "CachePolicyId": "658327ea-f89d-4fab-a63d-7e88639e58f6",
                "Compress": true,
                "FunctionAssociations": [
                  {
                    "EventType": "viewer-response",
                    "FunctionARN": {
                      "Fn::GetAtt": [
                        "landingResponseFunctionA308C722",
                        "FunctionARN"
                      ]
                    }
                  },
                  {
                    "EventType": "viewer-request",
                    "FunctionARN": {
                      "Fn::GetAtt": [
                        "landingRequestFunctionD581DA00",
                        "FunctionARN"
                      ]
                    }
                  }
                ],
                "TargetOriginId": "landingCDNOrigin1FCED8263",
                "ViewerProtocolPolicy": "redirect-to-https"
              },
              "DefaultRootObject": "index.html",
              "Enabled": true,
              "HttpVersion": "http2",
              "IPV6Enabled": true,
              "Origins": [
                {
                  "DomainName": {
                    "Fn::GetAtt": [
                      "landingBucket2B5C7526",
                      "RegionalDomainName"
                    ]
                  },
                  "Id": "landingCDNOrigin1FCED8263",
                  "S3OriginConfig": {
                    "OriginAccessIdentity": {
                      "Fn::Join": [
                        "",
                        [
                          "origin-access-identity/cloudfront/",
                          {
                            "Ref": "landingCDNOrigin1S3Origin18717D49"
                          }
                        ]
                      ]
                    }
                  }
                }
              ]
            }
          }
        },
        "landingRequestFunctionD581DA00": {
          "Type": "AWS::CloudFront::Function",
          "Properties": {
            "FunctionCode": "var REDIRECT_REGEX = /^[^.]+$|\\.(?!(css|gif|ico|jpg|jpeg|js|png|txt|svg|woff|woff2|ttf|map|json|webp|xml|pdf|webmanifest|avif|wasm)$)([^.]+$)/;\n\nfunction handler(event) {\n    var uri = event.request.uri;\n    var request = event.request;\n    var isUriToRedirect = REDIRECT_REGEX.test(uri);\n\n    if (isUriToRedirect) {\n        request.uri = \"/index.html\";\n    }\n\n    return event.request;\n}",
            "FunctionConfig": {
              "Comment": "app-dev-us-east-1-landing-request",
              "Runtime": "cloudfront-js-1.0"
            },
            "Name": "app-dev-us-east-1-landing-request",
            "AutoPublish": true
          }
        }
      },
      "Outputs": {
        "landingBucketName4FF24876": {
          "Description": "Name of the bucket that stores the static website.",
          "Value": {
            "Ref": "landingBucket2B5C7526"
          }
        },
        "landingDomain37625960": {
          "Description": "Website domain name.",
          "Value": {
            "Fn::GetAtt": [
              "landingCDN3A699906",
              "DomainName"
            ]
          }
        },
        "landingCloudFrontCName00BB4C9F": {
          "Description": "CloudFront CNAME.",
          "Value": {
            "Fn::GetAtt": [
              "landingCDN3A699906",
              "DomainName"
            ]
          }
        },
        "landingDistributionId9079C8BD": {
          "Description": "ID of the CloudFront distribution.",
          "Value": {
            "Ref": "landingCDN3A699906"
          }
        }
      }
    },
    "configValidationMode": "warn",
    "serviceFilename": "serverless.yml",
    "initialServerlessConfig": {
      "service": "app",
      "provider": {
        "name": "aws",
        "region": "us-east-1",
        "apiGateway": {
          "binaryMediaTypes": [
            "image/jpeg"
          ]
        },
        "environment": {
          "BREF_BINARY_RESPONSES": "1"
        },
        "stage": "dev",
        "versionFunctions": true,
        "deploymentMethod": "direct"
      },
      "plugins": {
        "$ref": "$[\"service\"][\"plugins\"]"
      },
      "functions": {
        "api": {
          "handler": "public/server.php",
          "description": "",
          "runtime": "provided.al2",
          "layers": [
            "arn:aws:lambda:us-east-1:534081306603:layer:php-81-fpm:54",
            "arn:aws:lambda:us-east-1:403367587399:layer:gd-php-81:11"
          ],
          "timeout": 28,
          "events": [
            {
              "httpApi": "*"
            }
          ],
          "vpc": {
            "securityGroupIds": [
              "sg-09f0fed8dfe2d4c61"
            ],
            "subnetIds": [
              "subnet-0be2353518acfca5b",
              "subnet-029e1558b28a20934",
              "subnet-0b45857b40bec8fd7",
              "subnet-0387e0576bba123bc",
              "subnet-0f43f48f3d97fed7d",
              "subnet-0dd5c7abe9d611a3c"
            ]
          },
          "name": "app-dev-api"
        }
      },
      "constructs": {
        "landing": {
          "type": "single-page-app",
          "path": "public"
        }
      },
      "package": {
        "patterns": [
          "!node_modules/**",
          "!tests/**",
          "!download/**",
          "!minute_data/**",
          "!.github/**",
          "!public/assets/**",
          "!public/minute_data/**",
          "!public/.htaccess",
          "!public/vite.svg",
          "!.git-ftp-ignore",
          "!.git-ftp-include"
        ],
        "artifactsS3KeyDirname": "serverless/app/dev/code-artifacts"
      }
    },
    "layers": {},
    "isDashboardMonitoringPreconfigured": false,
    "artifact": "C:\\laragon\\www\\fx-data-server\\.serverless\\app.zip"
  },
  "package": {
    "artifactDirectoryName": "serverless/app/dev/1688931743891-2023-07-09T19:42:23.891Z",
    "artifact": "app.zip"
  }
}